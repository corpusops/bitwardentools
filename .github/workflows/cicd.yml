env:
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"
  BUILDKIT_PROGRESS: "plain"
  NO_SQUASH: ""
  NONINTERACTIVE: "1"
  FORCE_ONLINE: "1"
  RELEASABLE_REPOS: "^corpusops/"
  RELEASABLE_BRANCHES: "^refs/tags"
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy: {matrix: {}}
    steps:
    - name: Set vars
      run: |-
          if ( echo "$GITHUB_REF" | egrep -q "${RELEASABLE_BRANCHES}" ) \
          && ( echo "$GITHUB_REPOSITORY" | egrep -q "${RELEASABLE_REPOS}" )
          then releasable=true;else releasable=false;fi
          echo "::set-output name=releasable::$releasable"
      id: v
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Activate docker experimental
      run: |-
        sudo bash -exc "service docker stop;python -c \
        \"d='/etc/docker/daemon.json';\
        import json;c=json.load(open(d));c['experimental']=True;\
        open(d, 'w').write(json.dumps(c))\"
        systemctl restart docker"
    - uses: actions/checkout@v2
    - name: Setup env
      run: |-
        for i in .env .env.local;do if [ -e $i.test ];then cp -v $i.test $i;fi;done
    - name: Install dependencies
      run: if ( docker-compose config|egrep -q build:; );then docker-compose build;fi
    - name: Start stack
      run: docker-compose up -d && docker-compose ps -a
    - name: Build a binary wheel and a source tarball
      run: python3 -m build --sdist --wheel --outdir dist/
    - name: Test with tox
      run: docker-compose exec app tox
		- name: setup python
		  if: steps.v.outputs.releasable == 'true'
			uses: actions/setup-python@v2
		- name: install python release pkgs
		  if: steps.v.outputs.releasable == 'true'
			run: python -m pip install --user build twine&&python -m build --sdist --wheel
    - name: Publish distribution
		  if: steps.v.outputs.releasable == 'true'
      uses: pypa/gh-action-pypi-publish@master
      with: {password: "${{ secrets.PYPI_PASSWORD }}"}
on:
  workflow_dispatch:
  push:
  pull_request:
  schedule: [{cron: '1 0 1,15 * *'}]

